- hosts: all
  become: true
  gather_facts: no

  tasks:
    - name: get effective group name
      command: "id -gn"
      register: gname
      tags: ["cert"]
      delegate_to: localhost
      connection: local
      become: no

    - name: ensure certificate management script exists
      get_url:
        url: https://raw.githubusercontent.com/kubernetes/kubernetes/master/cluster/saltbase/salt/generate-cert/make-ca-cert.sh
        dest: "{{ playbook_dir }}/make-ca-cert.sh"
        mode: "0755"
        force: no
      tags: ["cert"]
      delegate_to: localhost
      connection: local
      become: no

    - name: generate certs
      shell: "{{ playbook_dir }}/make-ca-cert.sh {{ kube_api_addr }} IP:127.0.0.1,IP:{{ kube_api_addr }},DNS:{{ kube_api_elb }},DNS:kubernetes,DNS:kubernetes.default,DNS:kubernetes.default.svc,DNS:kubernetes.default.svc.cluster.local"
      environment:
        CERT_DIR: "{{ playbook_dir }}/ssl"
        CERT_GROUP: "{{ gname.stdout }}"
      args:
        creates: 
          "{{ playbook_dir }}/ssl/server.cert"
      tags: ["cert"]
      delegate_to: localhost
      connection: local
      become: no

    - name: ensure kubernetes installed
      package: name={{ item }} state=present
      tags: ["install"]
      with_items:
        - kubernetes-master
        - kubernetes-node
        - etcd

    - name: configure docker
      copy: src={{ item }} dest=/etc/sysconfig/{{ item }} mode="0644"
      tags: ["install"]
      with_items:
        - docker-storage
        - docker-network

    - name: configure kubernetes
      copy: src={{ item }} dest=/etc/kubernetes/{{ item }}
      tags: ["install"]
      with_items:
        - controller-manager
        - apiserver
        - kubelet

    - name: upload kubernetes ssl certificates
      copy: src={{ playbook_dir }}/ssl/{{ item }} dest=/srv/kubernetes/{{ item }} mode="0660" owner="root" group="kube"
      tags: ["install"]
      with_items:
        - ca.crt 
        - server.cert
        - server.key

    - name: enable services
      service: name={{ item }} state=started enabled=yes
      tags: ["install"]
      with_items:
        - etcd
        - docker
        - kube-apiserver
        - kube-scheduler
        - kube-controller-manager
        - kube-proxy
        - kubelet

#   handlers:
#    - name: restart docker
#      service: name=docker state=restarted

