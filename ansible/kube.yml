- hosts: all
  become: true
  gather_facts: no

  tasks:
    - name: get effective group name
      command: "id -gn"
      register: gname
      tags: ["cert"]
      delegate_to: localhost
      connection: local
      become: no

    - name: ensure certificate management script exists
      get_url:
        url: https://raw.githubusercontent.com/kubernetes/kubernetes/master/cluster/saltbase/salt/generate-cert/make-ca-cert.sh
        dest: "{{ playbook_dir }}/make-ca-cert.sh"
        mode: "0755"
        force: no
      tags: ["cert"]
      delegate_to: localhost
      connection: local
      become: no

    - name: generate certs
      shell: "{{ playbook_dir }}/make-ca-cert.sh {{ kube_api_addr }} IP:127.0.0.1,IP:{{ kube_api_addr }},DNS:{{ kube_api_elb }},DNS:kubernetes,DNS:kubernetes.default,DNS:kubernetes.default.svc,DNS:kubernetes.default.svc.cluster.local"
      environment:
        CERT_DIR: "{{ playbook_dir }}/ssl"
        CERT_GROUP: "{{ gname.stdout }}"
      args:
        creates: 
          "{{ playbook_dir }}/ssl/server.cert"
      tags: ["cert"]
      delegate_to: localhost
      connection: local
      become: no

    - name: create kubectl config
      template: src=kubectl_config.j2 dest="{{ playbook_dir }}/../kubectl_config"
      tags: ["cert"]
      delegate_to: localhost
      connection: local
      become: no


    - name: check pypy status
      raw:  stat /opt/bin/pypy
      register: pypy_is_installed
      ignore_errors: True
      tags: ["install"]

    - name: download pypy
      when: pypy_is_installed | failed
      raw: mkdir -p /opt/bin && wget -nc -O /opt/pypy.tar.bz2 https://bitbucket.org/squeaky/portable-pypy/downloads/pypy-5.9-linux_x86_64-portable.tar.bz2
      ignore_errors: True
      tags: ["install"]

    - name: extract pypy
      when: pypy_is_installed | failed
      raw: test $(md5sum /opt/pypy.tar.bz2 | cut -d' ' -f1  ) = 65e4bcf1c18a1c3f2b1405c654d10755 && tar jxvf /opt/pypy.tar.bz2 -C /opt/ && ln -s /opt/pypy-5.9-linux_x86_64-portable/bin/pypy /opt/bin/pypy
      tags: ["install"]

    # https://coreos.com/blog/introducing-the-kubelet-in-coreos.html
    # https://coreos.com/kubernetes/docs/latest/deploy-master.html
    - name: copy kubelet unit
      vars:
        ansible_python_interpreter: /opt/bin/pypy
      copy: src=kubelet.service dest=/etc/systemd/system/kubelet.service mode="0644" owner="root"
      tags: ["install"]

    - name: ensure /var/lib/kubelet exists
      vars:
        ansible_python_interpreter: /opt/bin/pypy
      file: dest=/var/lib/kubelet state=directory
      tags: ["install"]

    - name: copy kubelet config
      vars:
        ansible_python_interpreter: /opt/bin/pypy
      copy: src=kubeconfig dest=/var/lib/kubelet/kubeconfig
      tags: ["install"]

    - name: ensure /etc/kubernetes/manifests exists
      vars:
        ansible_python_interpreter: /opt/bin/pypy
      file: dest=/etc/kubernetes/manifests state=directory
      tags: ["install"]

    - name: copy kube pods configs
      vars:
        ansible_python_interpreter: /opt/bin/pypy
      copy: src={{ item }} dest=/etc/kubernetes/manifests/{{ item }} mode="0644"
      with_items:
        - kube-apiserver.yml
        - kube-proxy.yml
        - kube-controller.yml
        - kube-scheduller.yml
      tags: ["install"]

    - name: ensure /etc/kubernetes/ssl dir exists
      vars:
        ansible_python_interpreter: /opt/bin/pypy
      file: dest=/etc/kubernetes/ssl state=directory owner="root"
      tags: ["install"]

    - name: upload kubernetes ssl certificates
      vars:
        ansible_python_interpreter: /opt/bin/pypy
      copy: src={{ playbook_dir }}/ssl/{{ item }} dest=/etc/kubernetes/ssl/{{ item }} mode="0660" owner="root"
      tags: ["install"]
      with_items:
        - ca.crt 
        - server.cert
        - server.key

    - name: enable services
      vars:
        ansible_python_interpreter: /opt/bin/pypy
      systemd: name={{ item }} state=started enabled=yes daemon_reload=yes
      tags: ["install"]
      with_items:
        - kubelet

